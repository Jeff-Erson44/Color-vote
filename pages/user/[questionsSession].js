import Head from "next/head";
import styled from "styled-components";
import NavbarUser from "../../components/NavbarUser"
import { getCookie ,setCookie} from 'cookies-next';
import { useEffect,useState } from 'react';

const QuestionsSessionStyle = styled.div `
text-align: center;
form{
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;

    input[type="radio"].demo2 {
        display: none;
      }

      input[type="radio"].demo2 + label {
        padding: 1rem 1rem;
        font-size: 1.25rem;
        line-height: 1.5;
        border-radius: 0.3rem;
        color: #fff;
        background-color: #6c757d;
        border: 1px solid transparent;
        transition: all 0.5s ease-in-out;
        font-size: 1.2rem;
        margin: 0.7rem;

        width: 300px;
      }

      input[type="radio"].demo2.demoyes:hover + label {
        background-color: #218838;
        border-color: #1e7e34;
      }

      input[type="radio"].demo2.demoyes:checked + label {
        background-color: #28a745;
        border-color: #28a745;
      }
      input[type="radio"].demo2.demono:hover + label {
        background-color: #c82333;
        border-color: #bd2130;
      }
      input[type="radio"].demo2.demono:checked + label {
        background-color: #dc3545;
        border-color: #dc3545;
      }

      input[type="radio"].demo2.darkgreen + label {
        background-color: #008000;
      }

      input[type="radio"].demo2.lightgreen + label {
        background-color: #2BD121;
      }

      input[type="radio"].demo2.orange + label {
        background-color: #FF8C00;
      }

      input[type="radio"].demo2.darkred + label {
        background-color: #990A00;
      }
      input[type="radio"].demo2.lightred + label {
        background-color: #E82300;
      }

      input[type="radio"].demo2.white+ label {
        background-color: #fff;
        color: #000;
        border: 1px solid #000;
      }

      input[type="radio"].demo2.black + label {
        background-color: #000;
      }
}
`

export default function QuestionsSession() { 
  const [Datas,setDatas] = useState([])

    const fetchData = async () => {
        const res = await fetch('/api/session/question_session',{
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },body: JSON.stringify({
                id:getCookie('id_session'),
                num:getCookie('page')
              }
            )
        })
        const data_get = await res.json()
        setDatas(data_get)
    }

    useEffect(()=>{
        fetchData()
    },[])

    return(
        <>
        <QuestionsSessionStyle>
    <Head>
        <title>Session questions</title> 
        <meta name = "description" content = "Generated by create next app" />
        <meta name = "viewport" content = "width=device-width, initial-scale=1" />
        <link rel = "icon" href = "/favicon.ico" />
    </Head>

    <NavbarUser />

      {console.log(Datas.question)}
    <h1>{Datas.question}</h1>
    <div>
       <form>

       <input type="radio" className="demo2 demono darkgreen"  id="demo2-a" />
        <label htmlFor="demo2-a">Tout à fait d'accord</label>

        <input type="radio" name="demo2 " className="demo2 demono lightgreen" id="demo2-b" />
        <label htmlFor="demo2-b">D'accord</label>

        <input type="radio" name="demo2" className="demo2 demono  orange" id="demo2-c" />
        <label htmlFor="demo2-c">Mitigé</label>

        <input type="radio" name="demo2" className="demo2 demono darkred" id="demo2-d" />
        <label htmlFor="demo2-d">Pas d'accord</label>

        <input type="radio" name="demo2 " className="demo2 demono lightred" id="demo2-e" />
        <label htmlFor="demo2-e">Pas tout à fait d'accord</label>

        <input type="radio" name="demo2 " className="demo2 demono white" id="demo2-f" />
        <label htmlFor="demo2-f">Pas d'avis</label>

        <input type="radio" name="demo2 " className="demo2 demono black" id="demo2-g" />
        <label htmlFor="demo2-g">Je ne souhaite pas répondre</label>

        <button>Suivant</button>
       </form>

       <p>1/16</p>
    </div>
    </QuestionsSessionStyle>

    </>
    )
}
